# importing element tree under the alias of ET
import xml.etree.ElementTree as ET
import pandas as pd

# passing the path of the xml document to enable the parsing process
tree = ET.parse()

# getting the parent tag of the xml document
root = tree.getroot()

# arrays to store the collected data
numbering = []
inchikeys = []
potentials = []
citations_array = []

def FindCitations(citations):
    citations_list = []
    for item1 in citations:
        journal = ''
        year = ''
        volume = ''
        page = ''
        doi = ''
        for item2 in item1:
            if item2.tag == 'CIT':
                for item3 in item2:
                    #article_check = True
                    #if item3.text != 'Article':
                    #    article_check = False
                    if item3.tag == 'CIT01':
                        for item4 in item3:
                            if item4.tag == 'CIT.JT':
                                journal = item4.text
                            if item4.tag == 'CIT.VL':
                                volume = item4.text
                            if item4.tag == 'CIT.PY':
                                year = item4.text
                            if item4.tag == 'CIT.PAG':
                                page = item4.text
                            if item4.tag == 'CIT.DOI':
                                doi = item4.text
                    #if article_check == False:
                    #    citation_text = 'Not article'
                    #else:
                    citation_text = journal + ',' + year + ',' + volume + ',' + page + '(' + doi + ')'
                citations_list.append(citation_text)
    return citations_list

# change this number according to the input xml file
count = 1

for substance in root.iter('substance'):
    numbering.append(count)
    inchikey = ''
    potential = []
    citation = []
    for aspect1 in substance:
        if aspect1.tag == 'IDE':
            for element in aspect1:
                if element.tag == 'IDE.INCHI': 
                    inchikey = element.text
                    inchikeys.append(inchikey)
        if aspect1.tag == 'ELCH':
            for aspect2 in aspect1:
                if aspect2.tag == 'ELCH.POT':
                    potential.append(aspect2.text)
                if aspect2.tag == 'citations':
                    journal_text = FindCitations(aspect2)
                    citation.append(journal_text)
    citations_array.append(citation)
    potentials.append(potential)
    count = count + 1


# create the dataframe to store captured data
# save it as a csv file
data = {'Number':numbering}
# , 'InchiKey':inchikeys, 'Potentials':potentials, 'Citations':citations_array}
df = pd.DataFrame(data)
df['InchiKey'] = inchikeys
df['Potentials'] = potentials
df['Citations'] = citations_array
df

#enter in file location
df.to_csv('', index=False)

